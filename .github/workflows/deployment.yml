name: Deployment

on:
  release:
    types: [published]

jobs:
  deploy-pypi:
    name: PyPI deployment
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          path: WebAppDIRACRepo
          fetch-depth: 0
      - uses: actions/checkout@v2
        with:
          repository: DIRACGrid/DIRAC
          path: DIRACRepo
          ref: integration
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          pip install build readme_renderer diraccfg packaging requests
      - name: Validate README for PyPI
        run: |
          python -m readme_renderer WebAppDIRACRepo/README.rst -o /tmp/README.html
      - name: Make PEP-440 style release on GitHub
        run: |
          OLD_STYLE=${GITHUB_REF##*/}
          NEW_STYLE=$(python -c "import diraccfg; major, minor, patch, pre = diraccfg.parseVersion('${OLD_STYLE}'); print(f'{major}.{minor}.{patch}', f'a{pre}' if pre else '', sep='')")
          echo "Converted ${OLD_STYLE} version to ${NEW_STYLE}"
          DIRACRepo/.github/workflows/make_release.py \
            --token="${{ secrets.GITHUB_TOKEN }}" \
            --repo="${{ github.repository }}" \
            --version="v${NEW_STYLE}" \
            --rev="$(git --git-dir ./WebAppDIRACRepo/.git rev-parse HEAD)" \
            --release-notes-fn="WebAppDIRACRepo/release.notes"
          git --git-dir ./WebAppDIRACRepo/.git fetch --all --tags
      # Need to do this after creating the PEP-440 style tag
      - name: Build distributions
        run: |
          python -m build ./WebAppDIRACRepo/
      - name: Publish package on PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: WebAppDIRACRepo/dist/
